from handlers.config import bot
from handlers.HandlerMenu.handler_language_select import handle_language_selection
from handlers.HandlerMenu.handler_help import handle_halp
from keyboard.keyboardInlineStartMessage import create_inline_keyboard
from telebot import types
import logging
from handlers.HandlerMenu.handler_pay_sub import process_pre_checkout_query,process_successful_payment
from keyboard.keyboard_inline_buy_menu import keyboard_inline_buy,keyboard_inline_payment
from handlers.callback_action_handler import process_callback
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(level=logging.INFO)





# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    try:
        if call.data == "buy_extend":
            keyboard_inline_buy(call)

        elif call.data.startswith("subscribe_"):
            keyboard_inline_payment(call)

        elif call.data == "help":
            handle_halp(call)  # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–º–æ—â–∏

        elif call.data == "active_keys":
            process_callback(call, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø—Ü–∏—é '–ú–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏'.", "–í—ã–±—Ä–∞–Ω–æ: –ú–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª—é—á–∏")

        elif call.data == "change_location":
            process_callback(call, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø—Ü–∏—é '–ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é'.", "–í—ã–±—Ä–∞–Ω–æ: –ò–∑–º–µ–Ω–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é")

        elif call.data == "change_protocol":
            process_callback(call, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø—Ü–∏—é '–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª'.", "–í—ã–±—Ä–∞–Ω–æ: –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª")

        elif call.data == "donate":
            process_callback(call, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø—Ü–∏—é '–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å'.", "–í—ã–±—Ä–∞–Ω–æ: –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å")

        elif call.data == "about_vpn":
            process_callback(call, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø—Ü–∏—é '–í—Å—ë –æ ZoomVPN'.", "–í—ã–±—Ä–∞–Ω–æ: –í—Å—ë –æ ZoomVPN")

        elif call.data == "invite":
            process_callback(call, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø—Ü–∏—é '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å'.", "–í—ã–±—Ä–∞–Ω–æ: –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å")

        elif call.data == "language":
            handle_language_selection(call)  # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞

        elif call.data == "partnership":
            process_callback(call, "–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–ø—Ü–∏—é '–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞'.", "–í—ã–±—Ä–∞–Ω–æ: –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞")

        elif call.data == "main_menu":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" –¥–æ —è–∑—ã–∫–æ–≤
            username = call.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            text = (
                f"üëã –ü—Ä–∏–≤–µ—Ç, {username}!\n\n"
                "üíª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ZoomVPN!:\n"
                "üö´ –ù–∏–∫–∞–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å–∫–æ—Ä–æ—Å—Ç–∏ ‚Äî –ø–æ–ª–Ω–∞—è —Å–≤–æ–±–æ–¥–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏.\n"
                "üåç –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–∞–π—Ç–∞–º ‚Äî –Ω–∏–∫–∞–∫–∏—Ö –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫, –≥–¥–µ –±—ã –≤—ã –Ω–∏ –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å.\n"
                "üîí –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —É—Ä–æ–≤–Ω–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤.\n"
                "‚öôÔ∏è –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ‚Äî –ª–µ–≥–∫–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∑–∞ 1 –º–∏–Ω—É—Ç—É –Ω–∞ iPhone, Android, –ü–ö –∏ macOS.\n"
                "üí≥ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–∞–º–∏ –†–§ üá∑üá∫ –∏ –°–ë–ü ‚Äî –ø—Ä–æ—Å—Ç–æ –∏ —É–¥–æ–±–Ω–æ.\n"
                "üíµ –í—Å–µ–≥–æ 199‚ÇΩ –≤ –º–µ—Å—è—Ü ‚Äî –±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∏ —Ä–µ–∫–ª–∞–º—ã.\n\n"
                "üöÄ –ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!"
            )
            keyboard = create_inline_keyboard()  # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            bot.send_message(
                call.message.chat.id,
                text,
                reply_markup=keyboard,
                parse_mode='Markdown'
            )

        elif call.data in ["ru", "en", "de", "fr"]:  # –Ø–∑—ã–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            language_mapping = {
                "ru": "—Ä—É—Å—Å–∫–∏–π",
                "en": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π",
                "de": "–Ω–µ–º–µ—Ü–∫–∏–π",
                "fr": "—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π"
            }
            selected_language = language_mapping.get(call.data)
            if selected_language:
                process_callback(
                    call,
                    f"–¢—ã –≤—ã–±—Ä–∞–ª {selected_language} —è–∑—ã–∫! –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ!",
                    f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {selected_language} —è–∑—ã–∫",
                    parse_mode='HTML'
                )
            else:
                process_callback(call, "–í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —è–∑—ã–∫")

        else:
            process_callback(call, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π.",
                             "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")

    except Exception as e:
        bot.send_message(call.message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        logging.error(f"Error in callback handler: {e}")


